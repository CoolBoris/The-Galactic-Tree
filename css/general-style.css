/* Global things */
body {
	color: var(--color);
	overflow: hidden;
	--background: #0f0f0f;
	--color: #dfdfdf;
	--points: #ffffff;
	background: var(--background);
	width: 100vw;
    height: 100vh;
    background-size: 300% 300%; /* Allows for smoother animation */
    animation: gradient-animation 8s ease infinite;
}

changelog {
	font-family: "Geist";
}

/* General text */
h1, h2, h3, b, input {
	display: inline;
	font-family: "Lucida Console", "Courier New", monospace
}

/* These are styles for different states of components. You can make layer-specific versions with .c.locked, for example */
.locked {
	background-color: #bf8f8f;
	cursor: not-allowed;
}

/* Can meens can be clicked/bought/etc */
.can {
	cursor: pointer;
}

.can:hover {
	transform: scale(1.15, 1.15);
	box-shadow: 0 0 20px var(--points)
}

.bought {
	background-color: #88df6b;
	cursor: default;
}

#points {
	color: var(--points);
	text-shadow: 0 0 100px var(--points);
}

/* Keyframes for the gradient animation */
@keyframes gradient-animation {
    0% {
        background-position: 0% 50%;
    }
    50% {
        background-position: 100% 50%;
    }
    100% {
        background-position: 0% 50%;
    }
}

/* Table layout and alignment */
.options-table {
    width: 100%;
    border-spacing: 0.2em;
    text-align: center;
	align-items: center;
}

/* Header styling */
.options-header {
    font-weight: bold;
    text-align: center;
    font-size: 1.2em;
    padding: 0.5em 0;
}

/* Spacer row for vertical spacing */
.spacer-row td {
    height: 1em;
}

.on {
    color: green;
    font-weight: bold;
    font-family: "Geist";
}

.off {
    color: red;
    font-weight: bold;
    font-family: "Geist";
}

.theme {
    color: var(--color);
    font-weight: bold;
    background-color: var(--points);
    padding: 0.2em 0.4em; /* Add padding for spacing */
    border-radius: 4px; /* Rounded corners */
    font-family: "Geist";
}

.fullreset {
    color: red;
    font-weight: bolder;
    font-family: "Geist";
}

@keyframes rainbow {
    0% { 
        color: rgb(255, 0, 0); 
        text-shadow: 0px 0px 20px rgb(255, 0, 0); /* Red shadow */
    }
    14% { 
        color: rgb(255, 165, 0); 
        text-shadow: 0px 0px 20px rgb(255, 165, 0); /* Orange shadow */
    }
    28% { 
        color: rgb(255, 255, 0); 
        text-shadow: 0px 0px 20px rgb(255, 255, 0); /* Yellow shadow */
    }
    42% { 
        color: rgb(0, 128, 0); 
        text-shadow: 0px 0px 20px rgb(0, 128, 0); /* Green shadow */
    }
    57% { 
        color: rgb(0, 0, 255); 
        text-shadow: 0px 0px 20px rgb(0, 0, 255); /* Blue shadow */
    }
    71% { 
        color: rgb(75, 0, 130); 
        text-shadow: 0px 0px 20px rgb(75, 0, 130); /* Indigo shadow */
    }
    85% { 
        color: rgb(238, 130, 238); 
        text-shadow: 0px 0px 20px rgb(238, 130, 238); /* Pink shadow */
    }
    100% { 
        color: rgb(255, 0, 0); 
        text-shadow: 0px 0px 20px rgb(255, 0, 0); /* Red shadow */
    }
}


@keyframes fracture {
    0% { 
        color: rgb(75, 0, 130); /* Dark Blue */
        text-shadow: 0px 0px 20px rgb(75, 0, 130); /* Dark Blue shadow */
    }
    25% { 
        color: rgb(106, 90, 205); /* Slate Blue */
        text-shadow: 0px 0px 20px rgb(106, 90, 205); /* Slate Blue shadow */
    }
    50% { 
        color: rgb(138, 43, 226); /* Blue Violet */
        text-shadow: 0px 0px 20px rgb(138, 43, 226); /* Blue Violet shadow */
    }
    75% { 
        color: rgb(147, 112, 219); /* Medium Purple */
        text-shadow: 0px 0px 20px rgb(147, 112, 219); /* Medium Purple shadow */
    }
    100% { 
        color: rgb(75, 0, 130); /* Dark Blue */
        text-shadow: 0px 0px 20px rgb(75, 0, 130); /* Dark Blue shadow */
    }
}

.rainbow-text {
    animation: rainbow 6s linear infinite; /* Adjust duration for speed */
}